/*******************************************************************************
 * Copyright (C) 2017 International Business Machines Corporation
 * All Rights Reserved
 *******************************************************************************/
apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
	mavenCentral()
}

dependencies {
	compile fileTree(dir: System.getenv("STREAMS_INSTALL") + '/lib', include: ['*.jar'])
    compile fileTree(dir: "$rootDir/opt/streamsx.topology/com.ibm.streamsx.topology/lib", include : ['*.jar'])
    compile files(System.getenv("STREAMS_INSTALL") + '/toolkits/com.ibm.streamsx.datetime/impl/lib/com.ibm.streamsx.datetime.jar')
    compile project(':ingest:common:com.ibm.streamsx.health.ingest')
    compile group: 'biz.paluch.redis', name: 'lettuce', version: '4.3.3.Final'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
	testCompile 'junit:junit:4.12'
}

test {
    afterTest { desc, result -> 
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

task buildIngestToolkit(type: GradleBuild) {
    buildFile = '../../../../ingest/common/com.ibm.streamsx.health.ingest/build.gradle'
    tasks = ['build']
}

task copyToLib(type: Copy) {
	into "$buildDir/output/lib"
	from configurations.runtime
}

task buildServices(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'com.ibm.streamsx.health.analyze.patientdiscovery.services.PatientDiscoveryService'

    // arguments to pass to the application
}

task cleanUp() {
    doLast {
        delete 'bin'
        delete 'com.ibm.streamsx.health.analyze.patientdiscovery.services.PatientDiscoveryService.sab'
        delete 'com.ibm.streamsx.health.analyze.patientdiscovery.services.PatientDiscoveryService_JobConfig.json'
    }
}

build.finalizedBy(buildIngestToolkit, buildServices)
compileJava.dependsOn copyToLib
clean.finalizedBy(cleanUp)
