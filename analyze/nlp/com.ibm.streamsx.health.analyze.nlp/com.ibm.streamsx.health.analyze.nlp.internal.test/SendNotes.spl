namespace com.ibm.streamsx.health.analyze.nlp.internal.test ;

use com.ibm.streamsx.health.ingest.connector::IngestPublish ;
use com.ibm.streamsx.health.ingest.types::Observation ;

composite SendNotes
{
	graph
		(stream<rstring filename> DirectoryScan_1_out0) as DirectoryScan_1 =
			DirectoryScan()
		{
			param
				directory : "./" ;
		}

		() as IngestPublish_2 = IngestPublish(Functor_4_out0 as inPort0Alias)
		{
			param
				topic : "com/ibm/streamsx/health/simulate/clinicalnotes/observations/v1" ;
		}

		(stream<blob content> FileSource_3_out0) as FileSource_3 =
			FileSource(DirectoryScan_1_out0)
		{
			param
				format : block ;
				blockSize : 1024u ;
		}

		(stream<Observation> Functor_4_out0) as Functor_4 =
			Functor(FileSource_3_out0)
		{
			output
				Functor_4_out0 : device =
				{
					id = "SendNotes", locationId = "generated"
				}, patientId = "patient0", readingSource = {
					id = "generated", sourceType = "generated", deviceId = "SendNotes"
				}, reading =
				{
					ts = 12345678l, readingType =
					{
						system = "generated", code = "generated"
					}, value = 0.0, uom = "", valueString = convertFromBlob(content)
				} ;
		}

}

